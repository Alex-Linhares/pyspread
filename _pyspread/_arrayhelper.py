#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6 on Sun May 25 23:31:23 2008

# Copyright 2008 Martin Manns
# Distributed under the terms of the GNU General Public License
# generated by wxGlade 0.6 on Mon Mar 17 23:22:49 2008

# --------------------------------------------------------------------
# pyspread is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# pyspread is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with pyspread.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

"""
_arrayhelper
============

Provides:
---------
sorted_keys:  Generator for sorting keys

"""

from itertools import ifilter

def sorted_keys(keys, startkey, reverse=False):
    """Generator that yields sorted keys starting with startkey

    Parameters
    ----------

    keys: Iterable of tuple/list
    \tKey sequence that is sorted
    startkey: Tuple/list
    \tFirst key to be yielded
    reverse: Bool
    \tSort direction reversed if True

    """

    tuple_key = lambda t: t[::-1]
    tuple_cmp = lambda t: t[::-1] < startkey[::-1]

    searchkeys = sorted(keys, key=tuple_key, reverse=reverse)
    searchpos = len(list(ifilter(tuple_cmp, searchkeys)))

    searchkeys = searchkeys[searchpos:] + searchkeys[:searchpos]

    for key in searchkeys:
        yield key
