#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2008 Martin Manns
# Distributed under the terms of the GNU General Public License
# generated by wxGlade 0.6 on Mon Mar 17 23:22:49 2008

# --------------------------------------------------------------------
# pyspread is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# pyspread is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with pyspread.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

"""
_main_window
============

Provides:
---------
  1) GuiInterfaces: Main window interfaces to GUI elements

"""

import wx

from _dialogs import DimensionsEntryDialog

class ModalDialogInterfaceMixin(object):
    """Main window interfaces to model dialogs"""
    
    def get_dimensions_from_user(self, no_dim):
        """Queries grid dimensions in a model dialog and returns n-tuple
        
        Parameters
        ----------
        no_dim: Integer
        \t Number of grid dimensions, currently must be 3
        
        """
        
        # Grid dimension dialog
        
        if no_dim != 3:
            raise NotImplementedError, "Currently, only 3D grids are supported."
        
        dim_dialog = DimensionsEntryDialog(self.main_window)
        
        if dim_dialog.ShowModal() != wx.ID_OK:
            dim_dialog.Destroy()
            return False
        
        dim = tuple(dim_dialog.dimensions)
        dim_dialog.Destroy()
        
        return dim

class GuiInterfaces(ModalDialogInterfaceMixin):
    """Main window interfaces to GUI elements"""
    
    def __init__(self, main_window):
        self.main_window = main_window
