#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6 on Sun May 25 23:31:23 2008

# Copyright 2008 Martin Manns
# Distributed under the terms of the GNU General Public License
# generated by wxGlade 0.6 on Mon Mar 17 23:22:49 2008

# --------------------------------------------------------------------
# pyspread is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# pyspread is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with pyspread. If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

"""
_events
=======

Event handler module

Provides
--------

* StatusBarMsg: Event handler for messages in the statusbar of the main window
* post_statusbar_msg: Posts a StatusBarMsg event

"""

import wx

def post_command_event(target, msg_cls, **kwargs):
    """Posts command event to main window
    
    Command events propagate.
    
    Parameters
    ----------
     * msg_cls: class
    \tMessage class from wx.lib.newevent.NewCommandEvent()
     * kwargs: dict
    \tMessage arguments
    
    """
    
    msg = msg_cls(-1, **kwargs)
    wx.PostEvent(target, msg)
    
    
# Main window
# ===========

TitleMsg, EVT_COMMAND_TITLE = wx.lib.newevent.NewCommandEvent()

CloseMsg, EVT_COMMAND_CLOSE = wx.lib.newevent.NewCommandEvent()

ManualMsg, EVT_COMMAND_MANUAL = wx.lib.newevent.NewCommandEvent()
TutorialMsg, EVT_COMMAND_TUTORIAL = wx.lib.newevent.NewCommandEvent()
FaqMsg, EVT_COMMAND_FAQ = wx.lib.newevent.NewCommandEvent()
AboutMsg, EVT_COMMAND_ABOUT = wx.lib.newevent.NewCommandEvent()

MacroListMsg, EVT_COMMAND_MACROLIST = wx.lib.newevent.NewCommandEvent()
MacroLoadMsg, EVT_COMMAND_MACROLOAD = wx.lib.newevent.NewCommandEvent()
MacroSaveMsg, EVT_COMMAND_MACROSAVE = wx.lib.newevent.NewCommandEvent()

# EntryLine
# =========

##EntryLineMsg, EVT_ENTRYLINE_MSG = wx.lib.newevent.NewEvent()
##EntryLineSelectionMsg, EVT_ENTRYLINE_SELECTION_MSG = wx.lib.newevent.NewEvent()

# Grid
# ====

# Grid cell events

# File events

NewMsg, EVT_COMMAND_NEW = wx.lib.newevent.NewCommandEvent()
OpenMsg, EVT_COMMAND_OPEN = wx.lib.newevent.NewCommandEvent()
SaveMsg, EVT_COMMAND_SAVE = wx.lib.newevent.NewCommandEvent()
SaveAsMsg, EVT_COMMAND_SAVEAS = wx.lib.newevent.NewCommandEvent()
ImportMsg, EVT_COMMAND_IMPORT = wx.lib.newevent.NewCommandEvent()
ExportMsg, EVT_COMMAND_EXPORT = wx.lib.newevent.NewCommandEvent()
ApproveMsg, EVT_COMMAND_APPROVE = wx.lib.newevent.NewCommandEvent()

# Print events

# Clipboard events

CutMsg, EVT_COMMAND_CUT = wx.lib.newevent.NewCommandEvent()
CopyMsg, EVT_COMMAND_COPY = wx.lib.newevent.NewCommandEvent()
CopyResultMsg, EVT_COMMAND_COPY_RESULT = wx.lib.newevent.NewCommandEvent()
PasteMsg, EVT_COMMAND_PASTE = wx.lib.newevent.NewCommandEvent()

# Grid view events

# Find events

# Grid change events

# Grid attribute events

# Undo/Redo events


# Statusbar
# =========

StatusBarMsg, EVT_STATUSBAR_MSG = wx.lib.newevent.NewEvent()


###############################






GridMsg, EVT_GRID_MSG = wx.lib.newevent.NewEvent()

TableChangeMsg, EVT_TABLE_CHANGE = wx.lib.newevent.NewEvent()
GridShapeMsg, EVT_GRID_SHAPE = wx.lib.newevent.NewEvent()

def post_status_text(evt_handler, text):
    """Posts a StatusBarMsg event for the main statusbar widget"""

    msg = StatusBarMsg(text=text)
    wx.PostEvent(evt_handler, msg)

def post_entryline_text(evt_handler, text):
    """Posts a StatusBarMsg event for the main statusbar widget"""

    msg = EntryLineMsg(text=text)
    wx.PostEvent(evt_handler, msg)

def post_entryline_selection(evt_handler, start, stop):
    """Posts a StatusBarMsg event for the main statusbar widget"""

    msg = EntryLineSelectionMsg(start=start, stop=stop)
    wx.PostEvent(evt_handler, msg)

def post_grid_text(evt_handler, text):
    """Posts a text for pysgrid[<current_cell>]"""
    
    msg = GridMsg(text=text)
    wx.PostEvent(evt_handler, msg)

def post_table_change(evt_handler, new_table):
    """Posts a StatusBarMsg event for the main statusbar widget"""
    
    msg = TableChangeMsg(new_table=new_table)
    wx.PostEvent(evt_handler, msg)

def post_shape_change(evt_handler, shape):
    """Posts a grid shape event for the main statusbar widget"""
    
    msg = GridShapeMsg(shape=shape)
    wx.PostEvent(evt_handler, msg)
